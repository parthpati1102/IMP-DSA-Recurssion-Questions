class Solution {
public:
    void usingRecurssion(int index , vector<int> &candidates , vector<vector<int>> &ans , vector<int> &vec , int target){
        if(target == 0){
            ans.push_back(vec);
            return;
        }

        for(int i = index ; i < candidates.size() ; i++){
            vec.push_back(candidates[i]);

            if(target - candidates[i] >= 0){
              usingRecurssion(i , candidates , ans , vec , target - candidates[i]);
            }
            
            vec.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> vec;

        usingRecurssion(0 , candidates , ans , vec , target);

        return ans;
    }
};
